// Code generated by GoHT v0.6.0 - DO NOT EDIT.
// https://github.com/stackus/goht

package testdata

import "context"
import "io"
import "github.com/stackus/goht"

type ObjRef string

func (ObjRef) ObjectID() string {
	return "123"
}

func (ObjRef) ObjectClass() string {
	return "objref"
}

func ObjectReferencesTest() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		o := ObjRef("")
		if _, __err = __buf.WriteString("<p"); __err != nil {
			return
		}
		if __var1 := goht.ObjectID(o); __var1 != "" {
			if _, __err = __buf.WriteString(" id=\"" + __var1 + "\""); __err != nil {
				return
			}
		}
		var __var2 string
		__var2, __err = goht.BuildClassList(goht.ObjectClass(o))
		if __err != nil {
			return
		}
		if _, __err = __buf.WriteString(" class=\"" + __var2 + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(">Unprefixed</p>\n<p"); __err != nil {
			return
		}
		if __var3 := goht.ObjectID(o, "prefixed"); __var3 != "" {
			if _, __err = __buf.WriteString(" id=\"" + __var3 + "\""); __err != nil {
				return
			}
		}
		var __var4 string
		__var4, __err = goht.BuildClassList(goht.ObjectClass(o, "prefixed"))
		if __err != nil {
			return
		}
		if _, __err = __buf.WriteString(" class=\"" + __var4 + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(">Prefixed</p>\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}
