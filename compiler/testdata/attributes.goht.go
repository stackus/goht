// Code generated by GoHT v0.6.0 - DO NOT EDIT.
// https://github.com/stackus/goht

package testdata

import "context"
import "io"
import "github.com/stackus/goht"

func AttributesTest() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<div class=\"boolean\" disabled>Disabled Content</div>\n"); __err != nil {
			return
		}
		condition := false
		if _, __err = __buf.WriteString("<div class=\"boolean\""); __err != nil {
			return
		}
		if condition {
			if _, __err = __buf.WriteString(" disabled"); __err != nil {
				return
			}
		}
		if _, __err = __buf.WriteString(">Conditional Content</div>\n"); __err != nil {
			return
		}
		attrs := map[string]string{"a": "b"}
		if _, __err = __buf.WriteString("<div class=\"attributes\""); __err != nil {
			return
		}
		var __var1 string
		__var1, __err = goht.BuildAttributeList(attrs)
		if __err != nil {
			return
		}
		if _, __err = __buf.WriteString(" " + __var1); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("></div>\n"); __err != nil {
			return
		}
		fizz := "buzz"
		if _, __err = __buf.WriteString("<div class=\"multiline\" foo=\"bar\" fizz=\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(goht.EscapeString(fizz) + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("></div>\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}
