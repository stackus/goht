// Code generated by GoHT v0.6.0 - DO NOT EDIT.
// https://github.com/stackus/goht

package tags

import "context"
import "io"
import "github.com/stackus/goht"

// Whitespace will be added between tags and between tags and text
// if that text is on a new line after the tag.
//
// %p Some text
// The above line will render as:
// <p>Some text</p>
//
// %p
// 	Some text
// The above line will render as:
// <p>
// 	Some text
// </p>
//
// Whitespace can have subtle effects on the final output of the
// rendered HTML, so it is important to understand how it works.

func Whitespace() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<p>This text has no whitespace between it and the tag.</p>\n<p>\nThis text has whitespace between it and the tag.\n<p>This tag has whitespace between it and the tag above.</p>\n</p>\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}

func HamlWhitespace() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<p>This text has no whitespace between it and the tag.</p>\n<p>\nThis text has whitespace between it and the tag.\n<p>This tag has whitespace between it and the tag above.</p>\n</p>\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}

func SlimWhitespace() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<p>This text has no whitespace between it and the tag.</p>\n<p>\n<This>text has NO whitespace between it and the tag.</This>\n<p>This tag has NO whitespace between it and the tag above.</p>\n</p>\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}

// You can control the whitespace that will be rendered between tags
// in the final output by using the `>` and <` operators.
// The `>` operator will remove all whitespace outside the tag, and
// the `<` operator will remove all whitespace inside the tag.
// These operators must be placed at the end of the tag but before
// either the `!` or `=` operators.
// You can use either or both of these operators on a tag, when using
// both, the order does not matter.

func RemoveWhitespace() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<p>~☢<\nThis text has no whitespace between it and the parent tag.\n>☢~</p>\n<p>\nThere is whitespace between this text and the parent tag.\n>☢~<p>~☢<\nThis text has no whitespace between it and the parent tag.\nThere is also no whitespace between this tag and the sibling text above it.\nFinally, the tag has no whitespace between it and the outer tag.\n>☢~</p>~☢<</p>\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}

func HamlRemoveWhitespace() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<p>~☢<\nThis text has no whitespace between it and the parent tag.\n>☢~</p>\n<p>\nThere is whitespace between this text and the parent tag.\n>☢~<p>~☢<\nThis text has no whitespace between it and the parent tag.\nThere is also no whitespace between this tag and the sibling text above it.\nFinally, the tag has no whitespace between it and the outer tag.\n>☢~</p>~☢<</p>\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}

func SlimRemoveWhitespace() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<p>\n<\nThis text has no whitespace between it and the parent tag.\n</p>\n<p>\nThere is whitespace between this text and the parent tag.\n<p>\n<>\nThis text has no whitespace between it and the parent tag.\nThere is also no whitespace between this tag and the sibling text above it.\nFinally, the tag has no whitespace between it and the outer tag.\n</p>\n</p>\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}
