// Code generated by GoHT v0.6.0 - DO NOT EDIT.
// https://github.com/stackus/goht

package tags

import "context"
import "io"
import "github.com/stackus/goht"

// Slim allows you to inline tags for those times when you really
// want to keep things concise.

func SlimInlineTags() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<ul>\n<li><a class=\"first\">First Item</a>\n</li>\n<li><a class=\"second\">First Item</a>\n</li>\n<li><a class=\"third\">First Item</a>\n</li>\n</ul>\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}
