// Code generated by GoHT - DO NOT EDIT.
// https://github.com/stackus/goht

package attributes

import "context"
import "io"
import "github.com/stackus/goht"

// Additional attributes may be added to an element using the `@attributes`
// command. This command accepts a list of additional attributes in the
// following formats:
// - A map[string]bool - Any attribute with a true value is added as is.
// - A map[string]string - Any attribute with a non-empty string value is
//   added as is.

var boolAttrs = map[string]bool{
	"disabled": true,
	"checked":  false,
}
var strAttrs = map[string]string{
	"type":  "checkbox",
	"value": "foo",
}

func AttributesCmd() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<input"); __err != nil {
			return
		}
		var __var1 string
		__var1, __err = goht.BuildAttributeList(boolAttrs, strAttrs)
		if __err != nil {
			return
		}
		if _, __err = __buf.WriteString(" " + __var1); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(">"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}

func HamlAttributesCmd() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<input"); __err != nil {
			return
		}
		var __var1 string
		__var1, __err = goht.BuildAttributeList(boolAttrs, strAttrs)
		if __err != nil {
			return
		}
		if _, __err = __buf.WriteString(" " + __var1); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(">"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}

func SlimAttributesCmd() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<input"); __err != nil {
			return
		}
		var __var1 string
		__var1, __err = goht.BuildAttributeList(boolAttrs, strAttrs)
		if __err != nil {
			return
		}
		if _, __err = __buf.WriteString(" " + __var1); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(">"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}
